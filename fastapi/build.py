import glob
import os
import shutil
import subprocess
import sys
from os.path import basename, join


def build_cython_library():
    """Build the Cython library and clean up intermediate files."""

    print("Building Cython library...")

    # Remove old build
    if os.path.exists("ooo"):
        shutil.rmtree("ooo")
        print('Removed "ooo" directory')

    # Build the extension
    result = subprocess.run(
        [sys.executable, "setup.py", "build_ext", "--build-lib", "."],
        capture_output=True,
        text=True,
    )

    if result.returncode != 0:
        print("Build failed:")
        print(result.stderr)
        return False

    print("Build successful!")

    # Clean up intermediate files
    print("Cleaning up intermediate files...")

    # Remove .c files generated by Cython
    for f in glob.glob("src/**/*.c", recursive=True):
        os.remove(f)
        print(f'Removed "{f}"')

    # Remove all Python files in the ooo package
    for f in glob.glob("src/**/*.py", recursive=True):
        os.remove(f)
        print(f'Removed "{f}"')

    # For some reason routers is not placed in a directory
    os.makedirs(join("ooo", "routers"))
    for f in glob.glob("counters.*.so", recursive=True):
        os.rename(f, join("ooo", "routers", basename(f)))

    print("Cleanup complete!")
    return True


if __name__ == "__main__":
    build_cython_library()
