# See https://gitlab.liris.cnrs.fr/pagoda/tools/mkdocs_template/-/blob/master/user_config/pyproject.toml

# -----------------------------------------------------------------------------
# Pytest configuration
# https://docs.pytest.org/en/latest/customize.html?highlight=pyproject#pyproject-toml

[tool.pytest.ini_options]
timeout = 120
log_cli = true
asyncio_mode = "auto"
# log_cli_level = "DEBUG"
addopts = "--doctest-modules -vv -ra --strict-markers --no-flaky-report"
testpaths = ["tests"]
filterwarnings = [
    "ignore::DeprecationWarning:tensorflow.*",
    "ignore::DeprecationWarning:tensorboard.*",
    "ignore::DeprecationWarning:matplotlib.*",
    "ignore::DeprecationWarning:flatbuffers.*",
]

# -----------------------------------------------------------------------------
# Coverage configuration
# https://coverage.readthedocs.io/en

[tool.coverage.run]
source = ["ooo"]
relative_files = true
concurrency = ["multiprocessing", "thread", "greenlet"]
parallel = true

# [tool.coverage.paths]
# source = ["services/api/src", "src"]

# -----------------------------------------------------------------------------
# Ruff configuration
# https://docs.astral.sh/ruff/

[tool.ruff]
line-length = 99
indent-width = 4
target-version = "py312"
extend-include = [".pyi?$", ".ipynb"]
extend-exclude = ["archive/*"]
respect-gitignore = true

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Enable auto-formatting of code examples in docstrings. Markdown,
# reStructuredText code/literal blocks and doctests are all supported.
docstring-code-format = true

[tool.ruff.lint]
# 1. Enable flake8-bugbear (`B`) rules, in addition to the defaults.
select = ["E1", "E4", "E7", "E9", "F", "I", "W1", "W2", "W3", "W6", "B"]

# 2. Avoid enforcing line-length violations (`E501`)
ignore = ["E501"]

# 3. Avoid trying to fix flake8-bugbear (`B`) violations.
unfixable = ["B"]

# 4. Ignore `E402` (import violations) in all `__init__.py` files, and in selected subdirectories.
[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["E402"]
"**/{tests,docs,tools}/*" = ["E402"]

[tool.ruff.lint.isort]
known-first-party = ["ooo"]

[tool.ruff.lint.flake8-bugbear]
# Allow default arguments like, e.g., `data: List[str] = fastapi.Query(None)`.
extend-immutable-calls = [
    "fastapi.Depends",
    "fastapi.File",
    "fastapi.Form",
    "fastapi.Path",
    "fastapi.Query",
]

# -----------------------------------------------------------------------------
# setuptools
# https://setuptools.pypa.io/en/latest/userguide/pyproject_config.html

[build-system]
requires = ["Cython~=3.1", "setuptools>=80.0"]
build-backend = "setuptools.build_meta"

[project]
name = "ooo"
description = "A FastAPI library that implements a counter."
readme = "README.md"
requires-python = ">=3.10"
license = "Apache-2.0"
classifiers = [ # https://pypi.org/classifiers/
    "Development Status :: 3 - Alpha",
    "Programming Language :: Python :: 3 :: Only",
    "Intended Audience :: Information Technology",
    "Operating System :: Unix",
]
# Sort your dependencies https://sortmylist.com/
# In general, for v1 and above, we pin to minor version using ~=
dependencies = [
    "aiosqlite~=0.21.0",
    "async-lru~=2.0.0",
    "asyncpg~=0.30.0",
    "authlib~=1.6.0",
    "coverage~=7.10.0",
    "Cython~=3.1",
    "email-validator~=2.2.0",
    "fastapi[standard]~=0.115.0",
    "flower~=2.0.0",
    "gunicorn~=22.0.0",
    "httpx~=0.27.0",
    "itsdangerous~=2.2.0",
    "limits~=3.14.0",
    "loguru~=0.7.0",
    "natsort[fast]~=8.4.0",
    "opentelemetry-api~=1.36.0",
    "opentelemetry-distro~=0.57b0",
    "opentelemetry-exporter-otlp~=1.36.0",
    "opentelemetry-instrumentation-aiohttp-client~=0.57b0",
    "opentelemetry-instrumentation-aiohttp-server~=0.57b0",
    "opentelemetry-instrumentation-asgi~=0.57b0",
    "opentelemetry-instrumentation-asyncio~=0.57b0",
    "opentelemetry-instrumentation-celery~=0.57b0",
    "opentelemetry-instrumentation-dbapi~=0.57b0",
    "opentelemetry-instrumentation-fastapi~=0.57b0",
    "opentelemetry-instrumentation-grpc~=0.57b0",
    "opentelemetry-instrumentation-httpx~=0.57b0",
    "opentelemetry-instrumentation-jinja2~=0.57b0",
    "opentelemetry-instrumentation-logging~=0.57b0",
    "opentelemetry-instrumentation-redis~=0.57b0",
    "opentelemetry-instrumentation-requests~=0.57b0",
    "opentelemetry-instrumentation-sqlalchemy~=0.57b0",
    "opentelemetry-instrumentation-sqlite3~=0.57b0",
    "opentelemetry-instrumentation-starlette~=0.57b0",
    "opentelemetry-instrumentation-system-metrics~=0.57b0",
    "opentelemetry-instrumentation-threading~=0.57b0",
    "opentelemetry-instrumentation-tornado~=0.57b0",
    "opentelemetry-instrumentation-tortoiseorm~=0.57b0",
    "opentelemetry-instrumentation-urllib3~=0.57b0",
    "opentelemetry-instrumentation-urllib~=0.57b0",
    "opentelemetry-instrumentation-wsgi~=0.57b0",
    "opentelemetry-sdk~=1.36.0",
    "orjson~=3.11.0",
    "pandas~=2.3.0",
    "Pillow~=11.3.0",
    "pottery~=3.0.0",
    "prometheus-api-client~=0.5.0",
    "psutil~=7.0.0",
    "psycopg[binary]~=3.2.0",
    "pwdlib[argon2]>=0.2.0",
    "pycountry~=24.6.0",
    "pycryptodomex~=3.23.0",
    "pydantic-extra-types~=2.10.0",
    "pydantic-settings~=2.10.0",
    "pydantic[email,timezone]~=2.11.0",
    "pyjwt~=2.10.0",
    "python-multipart~=0.0.20",
    "redis[hiredis]~=5.3.0",
    "SQLAlchemy~=2.0.0",
    "sqlmodel~=0.0.20",
    "starlette~=0.41.0",
    "tenacity~=8.5.0",
    "tiktoken~=0.7.0",
    "toml~=0.10.0",
    "tqdm~=4.67.0",
    "typer~=0.12.0",
    "typing_extensions~=4.14.0",
    "uvicorn[standard]~=0.28.0",
    "xmltodict~=0.14.0",
]
dynamic = ["version"]

[project.optional-dependencies]
lint = ["ruff~=0.12.9"]
test = [
    "flaky~=3.8.1",
    "mypy~=1.11.1",
    "pytest-asyncio>=0.23.8",
    "pytest-cov~=5.0.0",
    "pytest-timeout>=2.3.1",
    "pytest~=8.2.2",
    "sphinx-copybutton~=0.5.2",
    "sphinx>=7.0.0",
    "sphinx_rtd_theme~=2.0.0",  # Sphinx theme
]
build = [
    "build",
    "twine",
] # https://realpython.com/pypi-publish-python-package/#build-your-package
all = [
    "ooo[lint,test,docs,build]", # https://hynek.me/articles/python-recursive-optional-dependencies/
]


[tool.setuptools.dynamic]
version = { attr = "ooo.__version__" }

[tool.setuptools.packages.find]
where = ["src"]
